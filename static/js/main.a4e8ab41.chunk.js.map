{"version":3,"sources":["ChartConfigs/ChartConfigs.jsx","components/HistoryChart.jsx","components/CoinData.jsx","apis/CoinGecko.js","pages/CoinDetailPage.jsx","context/watchListContext.js","components/AddCoin.jsx","components/Coin.jsx","components/CoinList.jsx","pages/CoinSummaryPage.jsx","components/Header.jsx","App.jsx","index.js"],"names":["historyOptions","lineHeightAnnotation","always","hover","lineWeight","animation","duration","maintainAspectRatio","responsive","scales","xAxes","type","distribution","HistoryChart","data","chartRef","useRef","day","week","month","year","fiveYear","detail","useState","timeFormat","setTimeFormat","chartInstance","setChartInstance","determineTimeFormat","useEffect","current","destroy","chart","Chartjs","datasets","label","name","backgroundColor","borderColor","pointRadius","options","className","current_price","toFixed","price_change_24h","price_change_percentage_24h","renderPrice","ref","id","width","height","onClick","CoinData","market_cap","total_supply","total_volume","high_24h","circulating_supply","low_24h","renderData","axios","create","baseURL","CoinDetailPage","useParams","coinData","setCoinData","isLoading","setIsLoading","formatData","map","el","t","y","a","Promise","all","CoinGecko","get","params","vs_currency","days","ids","prices","fetchData","WatchListContext","createContext","WatchListContextProvider","props","localStorage","getItem","split","watchList","setWatchList","setItem","Provider","value","deleteCoin","coin","filter","addCoin","indexOf","children","AddCoin","isActive","setIsActive","useContext","href","Coin","to","src","image","alt","e","preventDefault","CoinList","coins","setCoins","join","response","length","CoinSummaryPage","Header","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4e8ab41.chunk.js","sourcesContent":["export const historyOptions = {\r\n    lineHeightAnnotation: {\r\n        always:true,\r\n        hover:false,\r\n        lineWeight: 1.5\r\n    },\r\n\r\n    animation: {\r\n        duration: 2000\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive:true,\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                distribution: \"linear\"\r\n            }\r\n        ]\r\n    }\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport Chartjs from \"chart.js\";\r\nimport { historyOptions } from '../ChartConfigs/ChartConfigs';\r\n\r\nconst HistoryChart = ({data}) => {\r\n    const chartRef = useRef();\r\n    const {day, week, month, year, fiveYear, detail} = data;\r\n    const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n    const [chartInstance, setChartInstance] = useState();\r\n\r\n    const determineTimeFormat = () => {\r\n        switch(timeFormat) {\r\n            case \"24h\":\r\n                return day;\r\n            case \"7d\":\r\n                return week;\r\n            case \"30d\":\r\n                return month;\r\n            case \"1y\":\r\n                return year;\r\n            case \"5y\":\r\n                return fiveYear;\r\n            default: \r\n                return day;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (chartRef && chartRef.current && detail) {\r\n            if (chartInstance) {\r\n                chartInstance.destroy();\r\n            }\r\n            const chart = new Chartjs(chartRef.current, {\r\n                type: 'line',\r\n                data: {\r\n                    datasets: [\r\n                        {\r\n                            label: `${detail.name} price`,\r\n                            data: determineTimeFormat(),\r\n                            backgroundColor: \"rgba(174, 305, 194, 0.5)\",\r\n                            borderColor: \"rgba(174, 305, 194, 0.4)\",\r\n                            pointRadius: 0,\r\n                        },\r\n                    ],\r\n                },\r\n                options: {\r\n                    ...historyOptions,\r\n                },\r\n            });\r\n            setChartInstance(chart);\r\n        }\r\n    }, [timeFormat]);\r\n\r\n    const renderPrice = () => {\r\n        if (detail) {\r\n            return (\r\n                <>\r\n                <p className=\"my-0\">${detail.current_price.toFixed(2)}</p>\r\n                <p \r\n                    className={\r\n                    detail.price_change_24h < 0 \r\n                    ? \"text-danger my-0\"\r\n                    : \"text-success my-0\"\r\n                }\r\n                >\r\n                    {detail.price_change_percentage_24h.toFixed(2)}%\r\n                    </p>\r\n                </>\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"bg-white border mt-2 rounded p-3\">\r\n            <div>{renderPrice()}</div>\r\n\r\n        <div>   \r\n            <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n        </div>\r\n\r\n        <div className=\"chart-button mt-1\">\r\n            <button onClick={() => setTimeFormat(\"24h\")} className=\"btn btn-outline-secondary btn-sm\">1 Day</button>\r\n            <button onClick={() => setTimeFormat(\"7d\")} className=\"btn btn-outline-secondary btn-sm mx-1\">1 Week</button>\r\n            <button onClick={() => setTimeFormat(\"30d\")} className=\"btn btn-outline-secondary btn-sm mx-1\">1 Month</button>\r\n            <button onClick={() => setTimeFormat(\"1y\")} className=\"btn btn-outline-secondary btn-sm mx-1\">1 Year</button>\r\n            <button onClick={() => setTimeFormat(\"5y\")} className=\"btn btn-outline-secondary btn-sm\">5 Years</button>\r\n        </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HistoryChart;","import React from 'react'\r\n\r\nconst CoinData = ({data}) => {\r\n\r\n    const renderData = () => {\r\n        if (data) {\r\n            return (\r\n            <div className=\"bg-white mt-3 p-2 rounded border row\">\r\n                <div className=\"col-sm\">\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-muted coin-data-category\">Market Cap</span>\r\n                        <span>{data.market_cap}</span>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-muted coin-data-category\">\r\n                            Total Supply\r\n                        </span>\r\n                        <span>{data.total_supply}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-muted coin-data-category\">Volume 24H</span>\r\n                        <span>{data.total_volume}</span>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-muted coin-data-category\">\r\n                            High 24H\r\n                        </span>\r\n                        <span>{data.high_24h}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-muted coin-data-category\">Circulating Supply</span>\r\n                        <span>{data.circulating_supply}</span>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-muted coin-data-category\">\r\n                            Low 24H\r\n                        </span>\r\n                        <span>{data.low_24h}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n    return (\r\n        <div>{renderData()}</div>\r\n    )\r\n}\r\n\r\nexport default CoinData;","import axios from \"axios\"\r\n\r\n//create axios object with endpoint\r\nexport default axios.create({\r\n    baseURL: \"https://api.coingecko.com/api/v3\"\r\n})","import { render } from '@testing-library/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HistoryChart from '../components/HistoryChart';\r\nimport CoinData from '../components/CoinData';\r\nimport CoinGecko from \"../apis/CoinGecko\";\r\n\r\nconst CoinDetailPage = () => {\r\n    const { id } = useParams();\r\n    const [coinData, setCoinData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const formatData = data => {\r\n        return data.map(el => {\r\n            return {\r\n                t: el[0],\r\n                y: el[1].toFixed(2),\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true)\r\n\r\n            const [ day, week, month, year, fiveYear, detail ] = await Promise.all([CoinGecko.get(`/coins/${id}/market_chart/`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: \"1\",\r\n                },\r\n            }),\r\n            CoinGecko.get(`/coins/${id}/market_chart/`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: \"7\",\r\n                },\r\n            }),\r\n            CoinGecko.get(`/coins/${id}/market_chart/`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: \"30\",\r\n                },\r\n            }),\r\n            CoinGecko.get(`/coins/${id}/market_chart/`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: \"365\",\r\n                },\r\n            }),\r\n            CoinGecko.get(`/coins/${id}/market_chart/`, {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    days: \"1825\",\r\n                },\r\n            }),\r\n            CoinGecko.get(\"/coins/markets\", {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    ids: id\r\n                },\r\n            \r\n            }),\r\n            ]);\r\n            \r\n            \r\n            setCoinData({\r\n                day: formatData(day.data.prices), \r\n                week: formatData(week.data.prices), \r\n                month: formatData(month.data.prices), \r\n                year: formatData(year.data.prices), \r\n                fiveYear: formatData(fiveYear.data.prices),\r\n                detail: detail.data[0],\r\n            });\r\n            setIsLoading(false)\r\n        };\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n    const renderData = () => {\r\n        if (isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div className=\"coinlist\">\r\n                <HistoryChart data={coinData} />\r\n                <CoinData data={coinData.detail} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return renderData();\r\n};\r\n\r\nexport default CoinDetailPage;","import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const WatchListContext = createContext();\r\n\r\nexport const WatchListContextProvider = props => {\r\n    const [watchList, setWatchList] = useState( localStorage.getItem(\"watchList\").split(\",\") ||  [\r\n        \"bitcoin\", \r\n        \"ethereum\", \r\n        \"ripple\", \r\n        \"litecoin\",\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"watchList\", watchList)\r\n    },[watchList])\r\n\r\n    const addCoin = coin => {\r\n        if (watchList.indexOf(coin) === -1) {\r\n            setWatchList([...watchList, coin])\r\n        }\r\n    }\r\n\r\n    const deleteCoin = (coin) => {\r\n        setWatchList(watchList.filter(el => {\r\n            return el !== coin\r\n        })\r\n        );\r\n    };\r\n    return (\r\n        <WatchListContext.Provider value={{ watchList, deleteCoin, addCoin}}>\r\n            {props.children}\r\n        </WatchListContext.Provider>\r\n    );\r\n};","import React, { useContext, useState } from 'react';\r\nimport { WatchListContext } from '../context/watchListContext';\r\n\r\nconst AddCoin = () => {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const {addCoin} = useContext(WatchListContext);\r\n\r\n    const availableCoins = [\r\n            \"bitcoin\",\r\n            \"ethereum\",\r\n            \"ripple\",\r\n            \"litecoin\",\r\n            \"tether\",\r\n            \"bitcoin cash\",\r\n            \"chainlink\",\r\n            \"binance coin\",\r\n            \"cardano\",\r\n            \"eos\",\r\n            \"tron\",\r\n            \"monero\",\r\n            \"stellar\",\r\n            \"tezos\",\r\n            \"iota\",\r\n        ];\r\n\r\n        const handleClick = (coin) => {\r\n            addCoin(coin);\r\n            setIsActive(false);\r\n\r\n        }\r\n\r\n        return ( \r\n            <div className=\"dropdown\">\r\n                <button \r\n                    onClick={() => setIsActive(!isActive)} \r\n                    className=\"btn btn-primary dropdown-toggle\" \r\n                    type=\"button\"\r\n                >\r\n                    Add Coin\r\n                </button>\r\n\r\n            <div className={isActive \r\n                ? \"dropdown-menu show\" \r\n                : \"dropdown-menu\"\r\n                }>\r\n                {availableCoins.map(el => {\r\n                    return(\r\n                        <a \r\n                            onClick={() => handleClick(el)} \r\n                            href=\"#\" \r\n                            className=\"dropdown-item\">\r\n                            {el}\r\n                        </a>\r\n                    );\r\n                })}\r\n            </div>\r\n            </div>\r\n        );\r\n};\r\n\r\n\r\nexport default AddCoin;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Coin = ({coin, deleteCoin}) => {\r\n   return (\r\n       <Link to={`/coins/${coin.id}`} className=\"text-decoration-none my-1 coin\">\r\n            <li className=\"coinlist-item list-group-item list-group-item-action d-flex justify-content-between align-items-center text-dark\">\r\n                <img className=\"coinlist-image\" src={coin.image} alt=\"\" />\r\n                <span className=\"text-decoration-none\">{coin.current_price}</span>\r\n                \r\n                <span className={\r\n                    coin.price_change_percentage_24h < 0 \r\n                        ? \"text-danger mr-2\" \r\n                        : \"text-success mr-2\"\r\n                }>\r\n                    {\" \"}\r\n                    {coin.price_change_percentage_24h < 0 ? ( \r\n                        <i className=\"fa fa-angle-down align-middle mr-1\"></i> \r\n                    ) : (                         \r\n                        <i className=\"fa fa-angle-up align-middle mr-1\"></i> \r\n                    )}\r\n                    \r\n                    {coin.price_change_percentage_24h}\r\n                </span>\r\n                <i onClick={(e) => {\r\n                    e.preventDefault();\r\n                    deleteCoin(coin.id);\r\n                }} className=\"fa fa-times-circle text-danger\"></i>\r\n\r\n            </li>\r\n       </Link>\r\n   )\r\n}\r\n\r\nexport default Coin","import React, { useEffect, useState, useContext } from 'react';\r\nimport CoinGecko from \"../apis/CoinGecko\";\r\nimport { WatchListContext } from '../context/watchListContext';\r\nimport Coin from \"./Coin\";\r\n\r\nconst CoinList = () => {\r\n    const [coins, setCoins] = useState([]);\r\n    const { watchList, deleteCoin} = useContext(WatchListContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n                setIsLoading(true);\r\n            const response = await CoinGecko.get(\"/coins/markets\", {\r\n                params: {\r\n                    vs_currency: \"usd\",\r\n                    ids: watchList.join(\",\"),\r\n                },\r\n            \r\n            });\r\n            setCoins(response.data);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        if (watchList.length > 0) {\r\n            fetchData();\r\n        } else {\r\n            setCoins([])\r\n        }\r\n\r\n    },[watchList]);\r\n\r\n    const renderCoins = () => {\r\n        if(isLoading) {\r\n            return <div>Loading...</div>\r\n        }\r\n        \r\n        return (\r\n            <ul className=\"coinlist list-group mt-2\">\r\n                {coins.map(coin => {\r\n                    return <Coin key={coin.id} coin={coin} deleteCoin={deleteCoin} />;\r\n                })}\r\n            </ul>\r\n        );\r\n    };\r\n\r\n    return <div>{renderCoins()}</div>;\r\n};\r\n\r\nexport default CoinList;","import React from 'react'\r\nimport AddCoin from \"../components/AddCoin\";\r\nimport CoinList from \"../components/CoinList\";\r\n\r\nconst CoinSummaryPage = () => {\r\n    return (\r\n        <div className=\"coinsummary shadow border p-2 rounded mt-2 bg-light\">\r\n            <AddCoin />\r\n            <CoinList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CoinSummaryPage;","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center text-warning mt-3 mb-4\">CCTracker</h1>;\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport CoinDetailPage from \"./pages/CoinDetailPage\";\r\nimport CoinSummaryPage from \"./pages/CoinSummaryPage\";\r\nimport Header from \"./components/Header\";\r\nimport \"./App.css\";\r\nimport { WatchListContextProvider } from './context/watchListContext';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className = \"container\">\r\n            <WatchListContextProvider>\r\n                <BrowserRouter>\r\n                    <Header />\r\n                    <Route exact path=\"/\" component={CoinSummaryPage} />\r\n                    <Route path=\"/coins/:id\" component={CoinDetailPage} />\r\n\r\n                </BrowserRouter>\r\n            </WatchListContextProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}